// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/auth/auth.proto

package auth

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TokensRequest struct {
	UserId               string   `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	IncludeIdToken       bool     `protobuf:"varint,2,opt,name=include_id_token,json=includeIdToken,proto3" json:"include_id_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokensRequest) Reset()         { *m = TokensRequest{} }
func (m *TokensRequest) String() string { return proto.CompactTextString(m) }
func (*TokensRequest) ProtoMessage()    {}
func (*TokensRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_33d3f162fbc68534, []int{0}
}
func (m *TokensRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokensRequest.Unmarshal(m, b)
}
func (m *TokensRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokensRequest.Marshal(b, m, deterministic)
}
func (dst *TokensRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokensRequest.Merge(dst, src)
}
func (m *TokensRequest) XXX_Size() int {
	return xxx_messageInfo_TokensRequest.Size(m)
}
func (m *TokensRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TokensRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TokensRequest proto.InternalMessageInfo

func (m *TokensRequest) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *TokensRequest) GetIncludeIdToken() bool {
	if m != nil {
		return m.IncludeIdToken
	}
	return false
}

type TokensResponse struct {
	IdToken              string   `protobuf:"bytes,1,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
	AccessToken          string   `protobuf:"bytes,2,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken         string   `protobuf:"bytes,3,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	TokenType            string   `protobuf:"bytes,4,opt,name=token_type,json=tokenType,proto3" json:"token_type,omitempty"`
	Scope                string   `protobuf:"bytes,5,opt,name=scope,proto3" json:"scope,omitempty"`
	ExpiresIn            int32    `protobuf:"varint,6,opt,name=expires_in,json=expiresIn,proto3" json:"expires_in,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TokensResponse) Reset()         { *m = TokensResponse{} }
func (m *TokensResponse) String() string { return proto.CompactTextString(m) }
func (*TokensResponse) ProtoMessage()    {}
func (*TokensResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_auth_33d3f162fbc68534, []int{1}
}
func (m *TokensResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokensResponse.Unmarshal(m, b)
}
func (m *TokensResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokensResponse.Marshal(b, m, deterministic)
}
func (dst *TokensResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokensResponse.Merge(dst, src)
}
func (m *TokensResponse) XXX_Size() int {
	return xxx_messageInfo_TokensResponse.Size(m)
}
func (m *TokensResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TokensResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TokensResponse proto.InternalMessageInfo

func (m *TokensResponse) GetIdToken() string {
	if m != nil {
		return m.IdToken
	}
	return ""
}

func (m *TokensResponse) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *TokensResponse) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *TokensResponse) GetTokenType() string {
	if m != nil {
		return m.TokenType
	}
	return ""
}

func (m *TokensResponse) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func (m *TokensResponse) GetExpiresIn() int32 {
	if m != nil {
		return m.ExpiresIn
	}
	return 0
}

func init() {
	proto.RegisterType((*TokensRequest)(nil), "erogen.TokensRequest")
	proto.RegisterType((*TokensResponse)(nil), "erogen.TokensResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthServiceClient is the client API for AuthService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthServiceClient interface {
	Tokens(ctx context.Context, in *TokensRequest, opts ...grpc.CallOption) (*TokensResponse, error)
}

type authServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthServiceClient(cc *grpc.ClientConn) AuthServiceClient {
	return &authServiceClient{cc}
}

func (c *authServiceClient) Tokens(ctx context.Context, in *TokensRequest, opts ...grpc.CallOption) (*TokensResponse, error) {
	out := new(TokensResponse)
	err := c.cc.Invoke(ctx, "/erogen.AuthService/Tokens", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthServiceServer is the server API for AuthService service.
type AuthServiceServer interface {
	Tokens(context.Context, *TokensRequest) (*TokensResponse, error)
}

func RegisterAuthServiceServer(s *grpc.Server, srv AuthServiceServer) {
	s.RegisterService(&_AuthService_serviceDesc, srv)
}

func _AuthService_Tokens_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokensRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthServiceServer).Tokens(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/erogen.AuthService/Tokens",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthServiceServer).Tokens(ctx, req.(*TokensRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "erogen.AuthService",
	HandlerType: (*AuthServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Tokens",
			Handler:    _AuthService_Tokens_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "proto/auth/auth.proto",
}

func init() { proto.RegisterFile("proto/auth/auth.proto", fileDescriptor_auth_33d3f162fbc68534) }

var fileDescriptor_auth_33d3f162fbc68534 = []byte{
	// 278 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x90, 0x4d, 0x4b, 0xc4, 0x30,
	0x10, 0x86, 0xad, 0xee, 0x66, 0xb7, 0xb3, 0x1f, 0x48, 0x70, 0xb5, 0x0a, 0x42, 0xad, 0x97, 0x9e,
	0x2a, 0xe8, 0xc9, 0xa3, 0x9e, 0xec, 0x35, 0xee, 0xc9, 0x4b, 0x59, 0xdb, 0xd1, 0x06, 0x25, 0x89,
	0x99, 0x54, 0xdc, 0x5f, 0xe8, 0xdf, 0x92, 0x26, 0x55, 0xd4, 0x4b, 0x60, 0x9e, 0x3c, 0xf3, 0xc2,
	0xbc, 0xb0, 0x32, 0x56, 0x3b, 0x7d, 0xb1, 0xe9, 0x5c, 0xeb, 0x9f, 0xc2, 0xcf, 0x9c, 0xa1, 0xd5,
	0xcf, 0xa8, 0x32, 0x01, 0x8b, 0xb5, 0x7e, 0x41, 0x45, 0x02, 0xdf, 0x3a, 0x24, 0xc7, 0x8f, 0x60,
	0xd2, 0x11, 0xda, 0x4a, 0x36, 0x49, 0x94, 0x46, 0x79, 0x2c, 0x58, 0x3f, 0x96, 0x0d, 0xcf, 0x61,
	0x5f, 0xaa, 0xfa, 0xb5, 0x6b, 0xb0, 0x92, 0x4d, 0xe5, 0xfa, 0xa5, 0x64, 0x37, 0x8d, 0xf2, 0xa9,
	0x58, 0x0e, 0xbc, 0x6c, 0x7c, 0x54, 0xf6, 0x19, 0xc1, 0xf2, 0x3b, 0x94, 0x8c, 0x56, 0x84, 0xfc,
	0x18, 0xa6, 0x3f, 0x4b, 0x21, 0x76, 0x22, 0x83, 0xcd, 0xcf, 0x60, 0xbe, 0xa9, 0x6b, 0x24, 0xfa,
	0x95, 0x19, 0x8b, 0x59, 0x60, 0x41, 0x39, 0x87, 0x85, 0xc5, 0x27, 0x8b, 0xd4, 0x0e, 0xce, 0x9e,
	0x77, 0xe6, 0x03, 0x0c, 0xd2, 0x29, 0x80, 0xff, 0xac, 0xdc, 0xd6, 0x60, 0x32, 0xf2, 0x46, 0xec,
	0xc9, 0x7a, 0x6b, 0x90, 0x1f, 0xc0, 0x98, 0x6a, 0x6d, 0x30, 0x19, 0xfb, 0x9f, 0x30, 0xf4, 0x4b,
	0xf8, 0x61, 0xa4, 0x45, 0xaa, 0xa4, 0x4a, 0x58, 0x1a, 0xe5, 0x63, 0x11, 0x0f, 0xa4, 0x54, 0x97,
	0x77, 0x30, 0xbb, 0xe9, 0x5c, 0x7b, 0x8f, 0xf6, 0x5d, 0xd6, 0xc8, 0xaf, 0x81, 0x85, 0xbb, 0xf8,
	0xaa, 0x08, 0xfd, 0x15, 0x7f, 0xca, 0x3b, 0x39, 0xfc, 0x8f, 0xc3, 0xf9, 0xd9, 0xce, 0x2d, 0x7b,
	0x18, 0xf5, 0xed, 0x3f, 0x32, 0x5f, 0xff, 0xd5, 0x57, 0x00, 0x00, 0x00, 0xff, 0xff, 0xcc, 0xf6,
	0xae, 0xd7, 0x97, 0x01, 0x00, 0x00,
}
