locals {
  # newbits = 3
  cidr_nnum_priv = [0, 2, 4]

  # newbits = 4
  cidr_nnum_publ = [2, 6, 10]
}

# ==================================================================================================
# Properties
# ==================================================================================================

module "props" {
  source = "../../props"

  namespace = "${var.project_name}"
  context   = "network"
  tags      = "${var.additional_tags}"
}

module "props_private" {
  source = "../props"

  attribute = "${module.props.family}"
  namespace = "${module.props.namespace}"
  context   = "private"
  tags      = "${module.props.tags}"
}

module "props_public" {
  source = "../props"

  context   = "public"
  family    = "${module.props.family}"
  namespace = "${module.props.namespace}"
  tags      = "${module.props.tags}"
}

# ==================================================================================================
# Data Sources
# ==================================================================================================

data "aws_availability_zones" "main" {
  state = "available"
}

# ==================================================================================================
# Resources
# ==================================================================================================

# the VPC itself
resource "aws_vpc" "main" {
  cidr_block                       = "10.0.0.0/16"
  tenancy_type                     = "default"
  enable_dns_support               = true
  enable_dns_hostnames             = true
  assign_generated_ipv6_cidr_block = true
  tags                             = "${module.props.tags}"
}

# ------------------------------------------------------------------------------
# VPC Core Resources (default)
# ----------------------------
# These resources are generated by default when provisioning the VPC. They're
# brought under Terraform management so they can be utilized.
# ------------------------------------------------------------------------------

resource "aws_default_network_acl" "main" {
  default_network_acl_id = "${aws_vpc.main.default_network_acl_id}"
  tags                   = "${module.props.tags}"

  ingress {
    protocol   = -1
    rule_no    = 100
    action     = "allow"
    cidr_block = "0.0.0.0/0"
    to_port    = 0
    from_port  = 0
  }

  egress {
    protocol   = -1
    rule_no    = 100
    action     = "allow"
    cidr_block = "0.0.0.0/0"
    to_port    = 0
    from_port  = 0
  }
}

resource "aws_default_security_group" "main" {
  vpc_id = "${aws_vpc.main.id}"
  tags   = "${module.props.tags}"

  ingress {
    protocol  = -1
    self      = true
    to_port   = 0
    from_port = 0
  }

  egress {
    protocol    = -1
    cidr_blocks = ["0.0.0.0/0"]
    to_port     = 0
    from_port   = 0
  }
}

resource "aws_default_route_table" "main" {
  default_route_table_id = "${aws_vpc.main.default_route_table_id}"
  tags                   = "${module.props.tags}"
}

# ------------------------------------------------------------------------------
# VPC Core Resources (custom)
# ---------------------------
# These resources make up the rest of the core suite.
# ------------------------------------------------------------------------------

# Elastic IP address for the NAT gateway.
resource "aws_eip" "main" {
  vpc  = true
  tags = "${module.props.tags}"
}

# VPC's main NAT gateway.
resource "aws_nat_gateway" "main" {
  allocation_id = "${aws_eip.main.id}"
  subnet_id     = "${aws_subnet.zone_a_public.id}"
  tags          = "${module.props.tags}"

  depends_on = ["aws_internet_gateway.main"]
}

# VPC's internet gateway.
resource "aws_internet_gateway" "main" {
  vpc_id = "${aws_vpc.main.id}"
  tags   = "${module.props.tags}"
}

# VPC's route table for private subnets.
resource "aws_route_table" "private" {
  vpc_id = "${aws_vpc.main.id}"
  tags   = "${module.props_private.tags}"

  route {
    cidr_block     = "0.0.0.0/0"
    nat_gateway_id = "${aws_nat_gateway.main.id}"
  }
}

# VPC's route table for public subnets.
resource "aws_route_table" "public" {
  vpc_id = "${aws_vpc.main.id}"
  tags   = "${module.props_public.tags}"

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = "${aws_internet_gateway.main.id}"
  }
}

# ------------------------------------------------------------------------------
# VPC Core Resources (subnets, route table assoc)
# -----------------------------------------------
# These resources completes a standard, feature-complete network.
# ------------------------------------------------------------------------------
resource "aws_subnet" "private" {
  count = "${length(data.aws_availability_zones.main.names)}"

  map_public_ip_on_launch         = true
  assign_ipv6_address_on_creation = true
  vpc_id                          = "${aws_vpc.main.id}"
  availability_zone               = "${data.aws_availability_zones.main.names[count.index]}"
  cidr_block                      = "${cidrsubnet(aws_vpc.main.cidr_block, 3, local.cidr_nnum_priv[count.index])}"

  tags = "${
    merge(
      module.props_private.tags,
      map("Name", "${module.props_private.id}-${data.aws_availability_zones.main.names[count.index]}")
    )}"
}

resource "aws_subnet" "public" {
  count = "${length(data.aws_availability_zones.main.names)}"

  map_public_ip_on_launch         = true
  assign_ipv6_address_on_creation = true
  vpc_id                          = "${aws_vpc.main.id}"
  availability_zone               = "${data.aws_availability_zones.main.names[count.index]}"
  cidr_block                      = "${cidrsubnet(aws_vpc.main.cidr_block, 3, local.cidr_nnum_publ[count.index])}"

  tags = "${
    merge(
      module.props_public.tags,
      map("Name", "${module.props_public.id}-${data.aws_availability_zones.main.names[count.index]}")
    )}"
}

resource "aws_route_table_association" "private" {
  subnet_id      = "${aws_subnet.private.*.id}"
  route_table_id = "${aws_route_table.private.id}"
}

resource "aws_route_table_association" "public" {
  subnet_id      = "${aws_subnet.public.*.id}"
  route_table_id = "${aws_route_table.public.id}"
}
